[["index.html", "Tijs Gems Chapter 1 Index", " Tijs Gems Tijs Van den Heuvel 2021-10-22 Chapter 1 Index This is a portfolio website. "],["p5-projects.html", "Chapter 2 P5 projects 2.1 Goldberg Polyhedron 2.2 Cylinder robot arm 2.3 Evolution 1: smart rockets 2.4 Evolution 2: evolutionary system 2.5 Ant simulation 2.6 Big Tree 2.7 Info Vis", " Chapter 2 P5 projects These are some visualizations I made with P5 2.1 Goldberg Polyhedron This is a project to calculate the coordinates and create a visualization of a (4,0) goldberg polyhedron More info… wikipedia: Goldberg polyhedron Platonic solids by Paul Bourke vertex coordinates source code knitr::include_url(&quot;https://tijsvandenheuvel.github.io/p5/goldberg_polyhedron/&quot;,height = &quot;777px&quot;) 2.2 Cylinder robot arm This is a visualization of the movement of a cylindrical robot arm with a variable amount of modules. It is generated with relative coordinates. I have not fully succeeded in calculating the absolute coordinates of the key points. I would need a better grasp of linear algebra and rotation matrices. More info… wikipedia: Rotation matrix source code knitr::include_url(&quot;https://tijsvandenheuvel.github.io/p5/cylinder_robot_arm/&quot;,height = &quot;600px&quot;) 2.3 Evolution 1: smart rockets This is a simple example of an evolutionary algorithm. The rockets learn to reach the target by reproducing and evolving. A rocket has an array of vectors as its DNA and every frame it applies the next vector. We start with a genetic pool of 200 different random rockets. Every 400 frames, the fitness of each rocket is calculated by how close it is to the target. A new population is constructed by mating random rockets from the population with randomly chosen genes from one or the other. The fitter a rocket is, the higher chance it has to be chosen as a mate More info… wikipedia: Evolutionary algorithm The tutorial I followed source code knitr::include_url(&quot;https://tijsvandenheuvel.github.io/p5/evolution1&quot;,height = &quot;800px&quot;) 2.4 Evolution 2: evolutionary system This is a simple example of an evolutionary system. The rockets try to survive by seeking and eating food. The faster a rocket goes, the faster it dies. If a rocket has enough health it can reproduce. The rockets have DNA consisting of color, maxspeed (length), maxforce. The color is to illustrate genetic variation. Food particles are randomly generated and also left when a rocket dies. You can add a predator to see how it impacts the system. More info… wikipedia: Evolutionary systems Inspiration video source code knitr::include_url(&quot;https://tijsvandenheuvel.github.io/p5/evolution2&quot;,height = &quot;750px&quot;) 2.5 Ant simulation This is an attempt to simulate ant-like behavior and emergent patterns. The ant try to find the food and when they found it they bring it back to the colony. The ants search the food by random walks and following pheromones left by other ants. The steering behavior of this simulation is very rudimentary and can be optimized in the future. This simulation was inspired by this video by Sebastion Lague More info… source code knitr::include_url(&quot;https://tijsvandenheuvel.github.io/p5/antsim&quot;,height = &quot;777px&quot;) 2.6 Big Tree This is an attempt to simulate growing a tree. This project is at a very early stage at the moment. There will be expanded on this in the future. More info… source code knitr::include_url(&quot;https://tijsvandenheuvel.github.io/p5/bigtree&quot;,height = &quot;777px&quot;) 2.7 Info Vis This is an experiment in text information structure visualisation. There will be expanded on this in the future. More info… source code knitr::include_url(&quot;https://tijsvandenheuvel.github.io/p5/infovis&quot;,height = &quot;777px&quot;) "],["code-ref.html", "Chapter 3 coding reference 3.1 Python 3.2 HTML", " Chapter 3 coding reference This is just an experiment in how Bookdown works but can become useful in the future 3.1 Python 3.1.1 Pandas 3.1.1.1 get not empty rows df.loc[~df[&#39;col&#39;].isnull()] 3.1.1.2 Convert column to datetime df[&#39;datetime&#39;]=pd.to_datetime(df[&#39;timestring&#39;]) 3.1.1.3 Get rows where column matches string df.loc[df[&#39;column_name&#39;] == &#39;string&#39;] 3.1.1.4 Get rows where column contains string df.loc[df[&#39;column_name&#39;].str.contains(&#39;string&#39;)] 3.1.1.5 iterate rows dataframe for row in df.iterrows(): print(row) 3.2 HTML 3.2.1 radio button group &lt;form&gt; &lt;fieldset id=&quot;group1&quot;&gt; &lt;input type=&quot;radio&quot; value=&quot;&quot;&gt; &lt;input type=&quot;radio&quot; value=&quot;&quot;&gt; &lt;/fieldset&gt; &lt;fieldset id=&quot;group2&quot;&gt; &lt;input type=&quot;radio&quot; value=&quot;&quot;&gt; &lt;input type=&quot;radio&quot; value=&quot;&quot;&gt; &lt;input type=&quot;radio&quot; value=&quot;&quot;&gt; &lt;/fieldset&gt; &lt;/form&gt; 3.2.2 Space &amp;nbsp; "]]
